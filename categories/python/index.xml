<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on N3xtChen 的博客</title><link>https://n3xtchen.github.io/n3xtchen/categories/python/</link><description>Recent content in Python on N3xtChen 的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>© 2023 n3xtchen</copyright><lastBuildDate>Tue, 12 Feb 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://n3xtchen.github.io/n3xtchen/categories/python/index.xml" rel="self" type="application/rss+xml"/><item><title>极简教程: 使用 matplotlib 绘制 GIF 动图</title><link>https://n3xtchen.github.io/n3xtchen/2019/02/12/2019-02-12-matplotlib-gif/</link><pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2019/02/12/2019-02-12-matplotlib-gif/</guid><description>开门见山，直接上例子：</description></item><item><title>py.test - 常见的命令</title><link>https://n3xtchen.github.io/n3xtchen/2016/07/17/2016-07-17-pytest---commandline/</link><pubDate>Sun, 17 Jul 2016 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2016/07/17/2016-07-17-pytest---commandline/</guid><description>发现每次使用 py.</description></item><item><title>Python - 下划线（_）</title><link>https://n3xtchen.github.io/n3xtchen/2015/04/22/2015-04-22-python---underscore/</link><pubDate>Wed, 22 Apr 2015 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2015/04/22/2015-04-22-python---underscore/</guid><description>这张帖子讨论 Python 的下划线的使用，讲解下它的大部分使用场景。</description></item><item><title>Python - 偏函数应用让你的代码看起来更简洁</title><link>https://n3xtchen.github.io/n3xtchen/2015/04/20/2015-04-20-python-clean-code-through-partial-function-application/</link><pubDate>Mon, 20 Apr 2015 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2015/04/20/2015-04-20-python-clean-code-through-partial-function-application/</guid><description>偏函数应用（Partial Function Application）听起来名字就很吸引人；它的作用是在函数调用前，预先固定参数的方法。它的机制有点粗糙，学术的解释有点古板，但是它很有用。如果你的函数需要 x 和 y 两个参数，实现把 x 参数固定了，后续调用只需要传入 y 即可，来看一个例子：</description></item><item><title>Python 命令行应用 - 创建项目结构</title><link>https://n3xtchen.github.io/n3xtchen/2015/02/27/2015-02-27-python---create-project-struct-of--command-line-applications/</link><pubDate>Fri, 27 Feb 2015 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2015/02/27/2015-02-27-python---create-project-struct-of--command-line-applications/</guid><description>我喜欢使用 Python 创建命令行应用，它写起来比 Bash 脚本更有逻辑直观。</description></item><item><title>Pyramid - 一个文件实现 Todo 应用</title><link>https://n3xtchen.github.io/n3xtchen/2015/01/11/2015-01-11-pyramid---todo-simple/</link><pubDate>Sun, 11 Jan 2015 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2015/01/11/2015-01-11-pyramid---todo-simple/</guid><description>此教程为你展示 Pyramid 开发 Web 应用的基本步骤。文章很短，使用尽可能少的代码实现一个待办事务（todo）应用。为了简洁，这里采用 Pyramid 的单文件应用模式来开发。</description></item><item><title>pyramid 快速入门 - (2)使用 Package 开发</title><link>https://n3xtchen.github.io/n3xtchen/2014/12/21/2014-12-21-pyramid---quick-tutorial-2/</link><pubDate>Sun, 21 Dec 2014 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2014/12/21/2014-12-21-pyramid---quick-tutorial-2/</guid><description>02.</description></item><item><title>Pyramid 快速入门 - (1)单文件应用</title><link>https://n3xtchen.github.io/n3xtchen/2014/12/19/2014-12-19-pyramid---quick-tutorial/</link><pubDate>Fri, 19 Dec 2014 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2014/12/19/2014-12-19-pyramid---quick-tutorial/</guid><description>前奏：从脚手架快速开始你的项目 # 原文见： quick_tutorial - scaffolds</description></item><item><title>Python - 简单的交互式数据分析</title><link>https://n3xtchen.github.io/n3xtchen/2014/10/22/2014-10-22-python---simple-interactive-data-analysis/</link><pubDate>Wed, 22 Oct 2014 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2014/10/22/2014-10-22-python---simple-interactive-data-analysis/</guid><description>交互式 Python # Python 是一个编程语言，它允许你快速创建和简单地编码就能完成相当复杂的任务。使用交互式 Python 解释器，试试输入一些命令来弄清楚它们工作原理。如果你完成一些基本 Python 教程，这里第一步对于你来说非常简单，只需要在命令行输入 python。</description></item><item><title>如何探索 Python？</title><link>https://n3xtchen.github.io/n3xtchen/2014/08/26/2014-08-26-python-internal/</link><pubDate>Tue, 26 Aug 2014 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2014/08/26/2014-08-26-python-internal/</guid><description>当我们学习很多东西的时候，大家都很想了解它的底层具体发生的事情。比如，“真的“ 和 ”为什么” 这些词经常会存在对话中 —— “当我运行一个列表，实际发生了什么？”，“为什么函数调用需要考虑成本？”。如果看完下面的部分，你就知道我有多喜欢挖掘 Python 的底层，并且我永远喜欢和别人分享这些。</description></item><item><title>Python - Toolz - 流式分析（Streaming Analytics）工具</title><link>https://n3xtchen.github.io/n3xtchen/2014/08/21/2014-08-21-python---toolz/</link><pubDate>Thu, 21 Aug 2014 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2014/08/21/2014-08-21-python---toolz/</guid><description>Toolz 可以用于编写分析大型数据流脚本，它支持通用的分析模式，如通过纯函数来对数据进行筛选（Selection），分组（Grouping），化简（Reduction）以及连表（Joining）。这些函数通常可以模拟类似其他数据分析平台（如 SQL 和 Panda）的类似操作行为。</description></item><item><title>使用 python - 实现 Map，Filter 以及 Reduce</title><link>https://n3xtchen.github.io/n3xtchen/2014/08/12/2014-08-12-python---mapfilterreduce/</link><pubDate>Tue, 12 Aug 2014 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2014/08/12/2014-08-12-python---mapfilterreduce/</guid><description>心血来潮，当我在构思不定参数文档的时候，想到了用 Map 作为例子，萌生我实现 MapReduce 机制的想法!</description></item><item><title>Python 优雅的使用参数 - 可变参数（*args &amp; **kwargs)</title><link>https://n3xtchen.github.io/n3xtchen/2014/08/08/2014-08-08-python---args-and-kwargs/</link><pubDate>Fri, 08 Aug 2014 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2014/08/08/2014-08-08-python---args-and-kwargs/</guid><description>写在前面的话 # 传递参数的行为对于现在编程语言来说，再寻常不过的概念</description></item><item><title>函数式编程 &amp;&amp; Python - 第一部分</title><link>https://n3xtchen.github.io/n3xtchen/2014/08/04/2014-08-04-python---functional-programming/</link><pubDate>Mon, 04 Aug 2014 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2014/08/04/2014-08-04-python---functional-programming/</guid><description>关于函数式 # Imperative Programming 指令式编程（C/C++，Java）</description></item><item><title>Python 测试驱动开发 - TDD初阶</title><link>https://n3xtchen.github.io/n3xtchen/2014/07/25/2014-07-25-python-tdd---doctest-unittest2-coverage/</link><pubDate>Fri, 25 Jul 2014 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2014/07/25/2014-07-25-python-tdd---doctest-unittest2-coverage/</guid><description>老是把 TDD 挂在嘴边，周边的人也不为之所动，终于下决心整理下文档，也顺便重温下学过的知识。</description></item><item><title>Python - PyMySQL 初探</title><link>https://n3xtchen.github.io/n3xtchen/2014/07/23/2014-07-23-python-pymysql-basic/</link><pubDate>Wed, 23 Jul 2014 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2014/07/23/2014-07-23-python-pymysql-basic/</guid><description>PyMySQL 是由纯 Python 实现的 MySQL 客户端库；他的目标是为了作为 MySQLdb 的替代品，可以在 CPython，PyPy，IronPython 和 Jython 上运行。</description></item><item><title>Python Django - simple guide</title><link>https://n3xtchen.github.io/n3xtchen/2013/11/25/2013-11-25-python-django---simple/</link><pubDate>Mon, 25 Nov 2013 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2013/11/25/2013-11-25-python-django---simple/</guid><description>一.</description></item><item><title>Python Mongo 模块 - Pymongo</title><link>https://n3xtchen.github.io/n3xtchen/2013/10/03/2013-10-03-python-module-pymongo/</link><pubDate>Thu, 03 Oct 2013 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2013/10/03/2013-10-03-python-module-pymongo/</guid><description>连接服务器 # &amp;gt;&amp;gt;&amp;gt; from pymongo import MongoClient &amp;gt;&amp;gt;&amp;gt; client = MongoClient('127.</description></item><item><title>Python Trick</title><link>https://n3xtchen.github.io/n3xtchen/2013/09/28/2013-09-28-python-trick-re/</link><pubDate>Sat, 28 Sep 2013 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2013/09/28/2013-09-28-python-trick-re/</guid><description>空白处理 # 去除字符中的所有空格 # _string = ' 88 11 10 ' print &amp;quot;&amp;quot;.</description></item><item><title>Python 常用模块 - 通用配置configParser</title><link>https://n3xtchen.github.io/n3xtchen/2013/09/24/2013-09-24-python-module-configparser/</link><pubDate>Tue, 24 Sep 2013 00:00:00 +0000</pubDate><guid>https://n3xtchen.github.io/n3xtchen/2013/09/24/2013-09-24-python-module-configparser/</guid><description>生成配置文件 # import ConfigParser config = ConfigParser.</description></item></channel></rss>